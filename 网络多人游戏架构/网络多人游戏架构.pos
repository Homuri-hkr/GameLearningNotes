{"diagram":{"image":{"height":200,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","width":200,"y":0,"x":0},"elements":{"id":"root","structure":"mind_right","leftChildren":[{"id":"b14a342fbdf8","title":"Socket","lineStyle":{"randomLineColor":"#0FBAB0"},"children":[{"id":"0fd9d6df5c93","title":"创建","children":[{"id":"3a055d9aa8af","title":"socket(int af, int type, int protocol)","children":[],"parent":"0fd9d6df5c93"}],"parent":"b14a342fbdf8"},{"id":"11dab8e2938d","title":"启动","children":[{"id":"f08f885ff9ad","title":"Windows需要手动启动：WSAStartup(WORD wVersionRequested, LPWSADATA lpWSAData)","children":[],"parent":"11dab8e2938d"},{"id":"c4aad549f269","title":"POSIX默认是激活状态","children":[],"parent":"11dab8e2938d"}],"parent":"b14a342fbdf8"},{"id":"b951b2d6c7ed","title":"绑定","parent":"b14a342fbdf8","children":[{"id":"701bda29c6be","title":"bind(SOCKET sock, const sockaddr* addree, int address_len)","parent":"b951b2d6c7ed","children":[]}]},{"id":"53016ccccfea","title":"TCP","parent":"b14a342fbdf8","children":[{"id":"88c03ac0d0d5","title":"监听","children":[{"id":"f69b3af93f80","title":"服务器监听：listen(SOCKET sock, int backlog)","children":[],"parent":"88c03ac0d0d5"}],"parent":"53016ccccfea"},{"id":"1a4d407a6d76","title":"连接","children":[{"id":"79adca886a8d","title":"客户端连接：connect(SOCKET sock, const sockaddr* addr, int addrlen)","children":[],"parent":"1a4d407a6d76"}],"parent":"53016ccccfea"},{"id":"ee2ac9b8ddd4","title":"接受","children":[{"id":"2049b2f79f94","title":"服务器接受连接请求：accept(SOCKET sock, sockaddr* addr, int* addrlen)","children":[],"parent":"ee2ac9b8ddd4"}],"parent":"53016ccccfea"},{"id":"17c8eb2521f4","title":"发送","parent":"53016ccccfea","children":[{"id":"9978175f94d3","title":"send(SOCKET sock, const sockaddr* addr, int len, int flags)","children":[],"parent":"17c8eb2521f4"}]},{"id":"5ce23abcc199","title":"接受","parent":"53016ccccfea","children":[{"id":"0ef9c0287214","title":"recv(SOCKET sock, char* buf, int len, int flags)","parent":"5ce23abcc199","children":[]}]}]},{"id":"f81366c57d7e","title":"UDP","parent":"b14a342fbdf8","children":[{"id":"2847802a6630","title":"发送","parent":"f81366c57d7e","children":[{"id":"9e0f8a0defa5","title":"sendto(SOCKET sock, const char* buf, int len, int flags, const sockaddr* to, int tolen)","parent":"2847802a6630","children":[]}]},{"id":"805d071563bf","title":"接受","parent":"f81366c57d7e","children":[{"id":"4ee1dd4061b4","title":"recvfrom(SOCKET sock, char* buf, int len, int flags, sockaddr* from, int* fromlen)","parent":"805d071563bf","children":[]}]}]},{"id":"ca2d3157797a","title":"获取错误","parent":"b14a342fbdf8","children":[{"id":"99ea5328570b","title":"Windows：WSAGetLastError()","parent":"ca2d3157797a","children":[]}]},{"id":"668e4b479227","title":"关闭","parent":"b14a342fbdf8","children":[{"id":"2ff5aa9e6d0f","title":"WIndows手动关闭：WSACleanup()","parent":"668e4b479227","children":[]}]},{"id":"5ab2c6ce40d9","title":"开启非阻塞","children":[{"id":"8d285e9b8477","title":"WIndows：ioctlsocket(SOCKET sock, long cmd, u_long* arg)","children":[],"parent":"5ab2c6ce40d9"},{"id":"3269f93a2139","title":"POSIX：fcntl(int sock, int cmd, ...)","children":[],"parent":"5ab2c6ce40d9"}],"parent":"b14a342fbdf8"},{"id":"a5f73cb0c051","title":"Select","children":[{"id":"e259785d43d3","title":"select(int nfds, fd_set* readfds, fd_set* writefds, fd_set* exceptfds, const timeval* timeout)","children":[],"parent":"a5f73cb0c051"}],"parent":"b14a342fbdf8"}],"parent":"root"},{"id":"7b3cd79458be","title":"序列化：将内存中随机访问格式转化为比特流格式","lineStyle":{"randomLineColor":"#7549C5"},"children":[{"id":"e1e69ae26b5c","title":"流：其他数据结构或计算资源的接口","children":[{"id":"5a1317a1e04a","title":"内存流：封装了内存的缓冲区，一般以字节为单位，通常为动态分配在堆栈的缓冲区","children":[],"parent":"e1e69ae26b5c"},{"id":"de39f9aebfdf","title":"比特流：可以序列化任何比特数据大小的数据","children":[],"parent":"e1e69ae26b5c"}],"parent":"7b3cd79458be"},{"id":"df27eed954bb","title":"引用数据","children":[{"id":"44f97913651a","title":"内联/嵌入：对于引用且不共享的数据，将数据嵌入到对象一起写入流","children":[],"parent":"df27eed954bb"},{"id":"8e93a12af3d1","title":"链接：对于引用且共享的数据，需要通过标识符来指定其链接的对象，反序列化时找到对应的对象","children":[],"parent":"df27eed954bb"}],"parent":"7b3cd79458be"},{"id":"39a325037492","title":"压缩","children":[{"id":"1e2d4b032f16","title":"稀疏数组：通过发送长度和数据而不是发送整个数组的数据","children":[],"parent":"39a325037492"},{"id":"ccab0bd95894","title":"熵编码：利用数据不稳定性进行压缩。含有期望数据比不含有期望数据包含更少的信息，发送期望数据比不期望数据需要更少的比特数。如哈夫曼编码、算术编码、gamma编码、行程编码","children":[],"parent":"39a325037492"},{"id":"d04ab7e2f65f","title":"定点：通过已知的数据精度，将浮点值压缩为定点值","children":[],"parent":"39a325037492"},{"id":"6ba9b440f225","title":"几何压缩：若变量存在约束，则可以通过约束减少需要传输的值","children":[],"parent":"39a325037492"}],"parent":"7b3cd79458be"}],"parent":"root"},{"id":"6a6eb8f0afc5","title":"网络拓扑","lineStyle":{"randomLineColor":"#0FBAB0"},"children":[{"id":"ccef8fa1dbaa","title":"客户端-服务器：一个游戏实例被指定为客户端，其他为服务器","children":[{"id":"9dbaaa45ef0e","title":"服务器维护n个链接，每个客户端维护1个","children":[],"parent":"ccef8fa1dbaa"},{"id":"942d6c050bcf","title":"服务器分类","children":[{"id":"d355d7b336a1","title":"权威服务器，当客户端和服务器端不同时，使用服务器更新客户端的状态。客户端会出现滞后","children":[],"parent":"942d6c050bcf"},{"id":"458280cfd2b0","title":"专用服务器：只运行游戏状态并和所有客户端通信，不显示任何图像，用于预算多的游戏","children":[],"parent":"942d6c050bcf"},{"id":"9dd033a5d7cb","title":"监听服务器：服务器也是游戏的参与者，玩家可以使用自己的主机作为服务端或者客户端。缺点是作为服务器的主机性能要高，且当服务器断开连接需要转移服务器的主机。其属于客户端-服务器和对等网络拓扑的混合模型","children":[],"parent":"942d6c050bcf"}],"parent":"ccef8fa1dbaa"}],"parent":"6a6eb8f0afc5"},{"id":"3c52ed6f88b5","title":"对等网络：每个单独的参与者和其他所有参与者连接","children":[{"id":"b7165d6cb3db","title":"每个客户端都需要n-1个连接","children":[],"parent":"3c52ed6f88b5"}],"parent":"6a6eb8f0afc5"}],"parent":"root"},{"id":"ad011de23252","title":"改进延迟处理","lineStyle":{"randomLineColor":"#FA5465"},"children":[{"id":"6d90b6726fec","title":"客户端插值：收到一个新状态时根据插值平滑过度状态","children":[],"parent":"ad011de23252"},{"id":"011b461cf629","title":"客户端预测：接受略旧的状态，并在显示给玩家前推测近似的最新状态","children":[{"id":"ffa323705c8c","title":"航位推测：基于实体继续做当前正在做的事情的假设，当和事实产生分歧则被纠正","children":[{"id":"02af7077ee5f","title":"即时状态更新：立即更新到最新状态","children":[],"parent":"ffa323705c8c"},{"id":"6c4cb78a97bd","title":"插值。插值到和正确位置附近","children":[],"parent":"ffa323705c8c"},{"id":"0ec845ff64c3","title":"二阶状态调整，处理加速导致的就算是插值也会跳跃的状况","children":[],"parent":"ffa323705c8c"}],"parent":"011b461cf629"},{"id":"13e0303e6b4d","title":"客户端移动预测和重放：客户端直接对输入进行模拟，然后当到达服务器时服务器也进行模拟，然后将状态返回给客户端，判断客户端是否需要更改状态即重放","children":[],"parent":"011b461cf629"},{"id":"76e6ad6f29b0","title":"使用游戏性的技巧：如在施法前需要进行吟唱，此时就可以等待服务器更新模拟，以减少延迟","children":[],"parent":"011b461cf629"}],"parent":"ad011de23252"},{"id":"7f73801a3792","title":"服务端回退：当玩家做出某种动作时，让服务器状态回退到玩家显示的状态（适合长距离射击等）","children":[{"id":"04b4c962ca9a","title":"对操作这友好，但对于其他玩家有影响","children":[],"parent":"7f73801a3792"}],"parent":"ad011de23252"}],"parent":"root"},{"id":"d7d7018c3add","title":"安全性","lineStyle":{"randomLineColor":"#02ACF4"},"children":[{"id":"32a263971404","title":"数据包嗅探：以非正常网络操作的目的读取数据包数据","children":[{"id":"4326d827e161","title":"中间人攻击：从源点到目的地的路由过程中某台计算机在嗅探数据包。解决方法是加密","children":[],"parent":"32a263971404"},{"id":"bfcb4be6fabc","title":"主机上的数据包嗅探：玩家视图利用信息作弊，即在收集不该知道的信息。解决方法是不发送不相关数据","children":[],"parent":"32a263971404"}],"parent":"d7d7018c3add"},{"id":"89acd6b9f583","title":"输入验证：验证操作在该时间节点是有效操作","children":[],"parent":"d7d7018c3add"},{"id":"6b85d6b12735","title":"软件作弊检测","children":[{"id":"c9a53e9c4d15","title":"维尔福反作弊系统VAC，适用于使用SteamWorks游戏开发平台的游戏。维护一个被禁用户列表，当用户尝试连接使用VAC的服务器则拒绝","children":[],"parent":"6b85d6b12735"},{"id":"65b14851687d","title":"典狱长反作弊系统：暴学创建的程序。扫描计算机内存检测已知的作弊程序","children":[],"parent":"6b85d6b12735"}],"parent":"d7d7018c3add"},{"id":"969af78bba64","title":"保护服务器","children":[{"id":"1bd7ec413287","title":"分布式拒绝服务攻击DDoS：使用过多的输入数让服务器的网络连接饱和","children":[],"parent":"969af78bba64"},{"id":"f607a9b5f131","title":"坏数据：恶意用户尝试给服务器发送格式不正确或不合适的数据包","children":[],"parent":"969af78bba64"},{"id":"523c6ed17d96","title":"时序攻击：通过分析特定哈希算法或加密系统已经拒绝无效数据所花费的时间可以了解其实现的信息","children":[],"parent":"969af78bba64"},{"id":"2e66e0db4bc6","title":"入侵：恶意用户视图闯入服务器","children":[],"parent":"969af78bba64"}],"parent":"d7d7018c3add"}],"parent":"root"}],"title":"网络多人游戏架构","watermark":"","root":true,"theme":"delicate_caihong","children":[{"id":"cfa5dd4e2b81","title":"互联网","lineStyle":{"randomLineColor":"#0D7C82"},"parent":"root","children":[{"id":"16e8fa57ad34","title":"五层网络模型","parent":"cfa5dd4e2b81","children":[{"id":"d8df721dd72e","title":"物理层：为网络中的计算机或主机提供物理连接","parent":"16e8fa57ad34","children":[]},{"id":"af0a55c16ea7","title":"链路层：提供网络实体间通信的方法","parent":"16e8fa57ad34","children":[{"id":"5b38203b8f98","title":"职责","parent":"af0a55c16ea7","children":[{"id":"2a1ac960187c","title":"定义主机的唯一标识符","parent":"5b38203b8f98","children":[]},{"id":"c702548d3622","title":"定义帧的格式","parent":"5b38203b8f98","children":[]},{"id":"fe740b5ab36c","title":"定义帧的长短","parent":"5b38203b8f98","children":[]},{"id":"a15552148423","title":"定义转换成物理信号的方法","parent":"5b38203b8f98","children":[]}]},{"id":"f4bf6e23687e","title":"不足","parent":"af0a55c16ea7","children":[{"id":"94ea5f58c1ef","title":"硬件中的MAC地址限制了灵活性（如更换硬件）","parent":"f4bf6e23687e","children":[]},{"id":"1d56930ed1be","title":"链路层不支持将互联网划分为更小的局域网，所有的主句都需要在一个连通的网络，导致瘫痪","parent":"f4bf6e23687e","children":[]},{"id":"09555fba95ac","title":"不支持不同链路层协议进行主机间的通信","parent":"f4bf6e23687e","children":[]}]},{"id":"6a2a60ebcef8","title":"帧的传输是不可靠的","parent":"af0a55c16ea7","children":[]},{"id":"a538cd7ed967","title":"以太网","parent":"af0a55c16ea7","children":[{"id":"e61bc10a22fe","title":"引入了MAC地址（目前MAC地址不具有唯一性）","parent":"a538cd7ed967","children":[]},{"id":"3554bc002e16","title":"目前很多以太网卡支持最大传输单元大于1500byte","parent":"a538cd7ed967","children":[]}]}]},{"id":"c3a759263136","title":"网络层：在链路层基础上提供一套逻辑地址的基础设施","parent":"16e8fa57ad34","children":[{"id":"88b8a845ea8c","title":"IPv4","children":[{"id":"570879a4e7e8","title":"直接路由：ARP地址解析协议：包含查询IP地址所对应的MAC地址的报文结构和记录IP地址和MAC的映射表","children":[{"id":"6a5d1ce4bbdd","title":"技术上是链路层协议，但是是链路层和IP层的桥梁","children":[],"parent":"570879a4e7e8"},{"id":"d2012ab367be","title":"其需要向网络连接中的所有主机广播本机包含MAC和IP地址的信息，若没有方法验证ARP包可能导致数据包嗅探","children":[],"parent":"570879a4e7e8"}],"parent":"88b8a845ea8c"},{"id":"f8f5df604929","title":"间接路由：子网","children":[{"id":"c1cb054bcf5d","title":"特殊地址","children":[{"id":"36d6808c6dc5","title":"0.0.0.0默认网络：包含所有IP地址的子网","children":[],"parent":"c1cb054bcf5d"},{"id":"2c9c1d24c473","title":"127.0.0.1回路地址：发送数据包到本机","children":[],"parent":"c1cb054bcf5d"},{"id":"8c482c39bb2b","title":"255.255.255.255广播地址：发送到相同链路层的所有主机","children":[],"parent":"c1cb054bcf5d"}],"parent":"f8f5df604929"},{"id":"d0605f30d105","title":"路由表","children":[{"id":"dd73f16f460f","title":"目标子网：包含目标IP地址和子网","children":[],"parent":"d0605f30d105"},{"id":"62ee76d372c6","title":"网关：通过链路层发送数据包的下一台主机的IP地址。为空则可直接路由","children":[],"parent":"d0605f30d105"},{"id":"1bdf7babf883","title":"网卡：转发数据包的网卡","children":[],"parent":"d0605f30d105"}],"parent":"f8f5df604929"}],"parent":"88b8a845ea8c"},{"id":"da2ba682c2d6","title":"分片：若IP模块要传输的数据比链路层大，则分片","children":[{"id":"a41482ae7c35","title":"低效","children":[{"id":"3fb98e2c56a1","title":"增加了网络上发送的数据量","children":[],"parent":"a41482ae7c35"},{"id":"8034891ad36c","title":"若一个分片丢失，接收方则必须放弃整个数据包","children":[],"parent":"a41482ae7c35"}],"parent":"da2ba682c2d6"},{"id":"78e62a1677b3","title":"最好把IP限制在1300byte以内防止分片","children":[],"parent":"da2ba682c2d6"}],"parent":"88b8a845ea8c"}],"parent":"c3a759263136"},{"id":"c8359120ffa8","title":"IPv6","children":[{"id":"7e4333709228","title":"NDP邻居发现协议：代替了ARP和DHCP的部分功能。路由器公布网络前缀和路由表信息，主机查询宣布其IP地址MAC地址","children":[],"parent":"c8359120ffa8"},{"id":"c9094a9a1429","title":"不再支持数据包分片技术，若对链路层包太大则直接丢弃并告知发送方","parent":"c8359120ffa8","children":[]}],"parent":"c3a759263136"}]},{"id":"ba2763bf18d0","title":"传输层：实现主机上单独进程之间的通信，引入了端口概念","parent":"16e8fa57ad34","children":[{"id":"f3a243cd6572","title":"端口划分","parent":"ba2763bf18d0","children":[{"id":"60d612f2646a","title":"0-1023：系统端口。注册要求严格，大部分操作系统只允许root级进程能绑定或更高安全级别","parent":"f3a243cd6572","children":[]},{"id":"dbbeffbcceac","title":"1024-49151：用户端口。任何协议和开发者都可以向IANA申请。但传输层协议并不能保证其他应用使用该端口非法","children":[],"parent":"f3a243cd6572"},{"id":"14490491f6b8","title":"49152-65535：动态端口。IANA不负责注册，对任何进程都是公平的","parent":"f3a243cd6572","children":[]}]},{"id":"4689f02733b0","title":"传输层协议","parent":"ba2763bf18d0","children":[{"id":"e7f72fd560fd","title":"传输控制协议TCP：协议号6","parent":"4689f02733b0","children":[{"id":"af2eb884653b","title":"可靠性：数据传输需要收到包含特定序列号的确认","parent":"e7f72fd560fd","children":[]},{"id":"3c7f2e958da3","title":"三次握手","children":[],"parent":"e7f72fd560fd"},{"id":"015bd2d84227","title":"数据传输","children":[{"id":"ff8461c820c7","title":"保证数据按序到达","children":[{"id":"7136b8073371","title":"直接丢弃，等待重传","children":[],"parent":"ff8461c820c7"},{"id":"eaccd3e592ec","title":"缓存它，同时不确认也不交给上层处理，直到该序列号之前的都到达再确认","children":[],"parent":"ff8461c820c7"}],"parent":"015bd2d84227"},{"id":"d2254f357ae5","title":"流量控制：防止一台快速传输的主机压制另一台处理较慢的主机，使用滑动窗口算法","children":[],"parent":"015bd2d84227"},{"id":"f0526857e2f6","title":"拥塞控制：防止较慢的网络和路由器不被数据淹没。使用倍增的思想","children":[],"parent":"015bd2d84227"},{"id":"2fa0bee2b7cf","title":"纳格算法：当传输的数据量比较小时，累积到一定大小的数据再进行发送。游戏应用要关闭该算法","parent":"015bd2d84227","children":[]}],"parent":"e7f72fd560fd"},{"id":"80f51b555458","title":"四次挥手","parent":"e7f72fd560fd","children":[]}]},{"id":"1433591a9fde","title":"用户数据包协议UDP：协议号17","parent":"4689f02733b0","children":[]},{"id":"f82ca3f4f208","title":"数据包拥塞控制协议DCCP：协议号33","parent":"4689f02733b0","children":[]},{"id":"be47b2eb380c","title":"流控制传输协议SCTP：132","parent":"4689f02733b0","children":[]}]}]},{"id":"b226f8e72fbf","title":"应用层","parent":"16e8fa57ad34","children":[{"id":"d32b9e6a9590","title":"DHCP动态主机配置协议：主机在接入网络时请求自动配置信息","parent":"b226f8e72fbf","children":[]},{"id":"ec7198a9d468","title":"DNS域名系统协议：将域名和子域名翻译成IP地址，名称服务器存储域名和IP地址的映射。通常使用UDP协议发送","parent":"b226f8e72fbf","children":[]}]}]},{"id":"eb64a00b99e3","title":"NAT：将整个子网的主机通过一个共享的公开IP连接到互联网","children":[{"id":"464802a9fc2a","title":"所有现代NAT路由器的解决方案都破坏了网络层和传输层的抽象","children":[],"parent":"eb64a00b99e3"},{"id":"acc1fbb1a009","title":"为了安全，许多路由器将原始目的IP地址和端口添加到NAT表表项，当响应数据包到达时可以知道是谁的数据包","children":[],"parent":"eb64a00b99e3"},{"id":"049b00915ac6","title":"NAT穿越","children":[{"id":"c9ba3d933643","title":"使用者在路由器上手动配置端口转发，不适合游戏","children":[],"parent":"049b00915ac6"},{"id":"047b0d6d8693","title":"UDP简单穿越方式STUN：主机与第三方主机通信，第三方主机告诉彼此如何连接。其不适合所有NAT实现","children":[],"parent":"049b00915ac6"},{"id":"4ac314f1efea","title":"TCP打洞技术，前提是路由器支持","children":[],"parent":"049b00915ac6"},{"id":"68612f6fd7fb","title":"因特网网关设备协议IGDP也允许NAT穿越","children":[],"parent":"049b00915ac6"}],"parent":"eb64a00b99e3"}],"parent":"cfa5dd4e2b81"}]},{"id":"0e7a68ab7e35","title":"IO模型","lineStyle":{"randomLineColor":"#F88A35"},"children":[{"id":"9fdb1213fd9e","title":"同步","children":[{"id":"2c9c578a9db7","title":"阻塞IO(recv、cecvfrom)：应用程序调用一个IO函数，导致应用程序被阻塞，等数据准备好后从内核拷贝到用户空间","children":[],"parent":"9fdb1213fd9e"},{"id":"fdcba597126e","title":"非阻塞IO(recv和recvfrom)：通过进程反复调用IO函数，当IO操作无法完成时返回错误，由此不断测试数据是否准备好，会浪费CPU时间，且拷贝时进程是阻塞的","children":[],"parent":"9fdb1213fd9e"},{"id":"159d2abd4b2b","title":"IO复用（select、poll、epoll）：同时阻塞多个IO操作，可以同时对多个IO进行读写操作以及检测，直到有数据可以进行这些动作时才真正调用IO操作函数","children":[],"parent":"9fdb1213fd9e"},{"id":"14df21f69e17","title":"信号驱动IO：当数据准备好时，进程收到一个信号，可在信号处理函数中调用IO操作处理数据","children":[],"parent":"9fdb1213fd9e"}],"parent":"0e7a68ab7e35"},{"id":"4cd724bd1ae9","title":"异步","children":[{"id":"f167d716764b","title":"异步IO：当一个异步进程调用发出后，被调用者通过状态、通知或回调通知调用者的输入输出操作","children":[],"parent":"4cd724bd1ae9"}],"parent":"0e7a68ab7e35"}],"parent":"root"},{"id":"1a1593961048","title":"对象复制：从一台主机向另一台主机传输对象状态的行为","lineStyle":{"randomLineColor":"#F88A35"},"children":[{"id":"da313e4b74a9","title":"复制步骤","children":[{"id":"c4bdfac027b1","title":"标记数据包为对象状态数据包","children":[],"parent":"da313e4b74a9"},{"id":"054398761734","title":"唯一标识复制对象","children":[],"parent":"da313e4b74a9"},{"id":"d62716702df9","title":"指明被复制对象的类型","children":[],"parent":"da313e4b74a9"}],"parent":"1a1593961048"},{"id":"b81b44e72625","title":"复制实现","children":[{"id":"4d39b2f35316","title":"链接上下文生成标识符发给对应主机，以及接受对象获取其中标识符","children":[],"parent":"b81b44e72625"},{"id":"80be53c218e0","title":"注册表：将一个类标识符映射到函数，函数创建特定对象。网络模块通过id找到对应函数","children":[],"parent":"b81b44e72625"}],"parent":"1a1593961048"},{"id":"c4aaf36b3652","title":"复制方法","children":[{"id":"c960998fab0c","title":"直接复制整个世界对象的状态","children":[],"parent":"c4aaf36b3652"},{"id":"39add48d2dc5","title":"复制对应状态的增量","children":[],"parent":"c4aaf36b3652"}],"parent":"1a1593961048"},{"id":"814cfa6164fa","title":"RPC：远程过程调用，一台主机可以在另一台或多台远程主机上执行的操作","children":[],"parent":"1a1593961048"},{"id":"feec4a2d80f5","title":"RMI：远程方法调用，在特定对象上调用一个方法","children":[],"parent":"1a1593961048"}],"parent":"root"},{"id":"3d87cc99a12d","title":"网络问题","lineStyle":{"randomLineColor":"#80BA4C"},"children":[{"id":"b78c6cc9571f","title":"延迟","children":[{"id":"5ccda778d04a","title":"非网络延迟","children":[{"id":"9a9215cfbd10","title":"输入采样延迟","children":[],"parent":"5ccda778d04a"},{"id":"496d7a1e0310","title":"渲染流水线延迟","children":[],"parent":"5ccda778d04a"},{"id":"97b3eac49dfe","title":"多线程渲染流水线延迟","children":[],"parent":"5ccda778d04a"},{"id":"9d2eaa31e7f2","title":"垂直同步","children":[],"parent":"5ccda778d04a"},{"id":"eb52a3856d45","title":"显示延迟","children":[],"parent":"5ccda778d04a"},{"id":"5c9959c91b77","title":"像素响应时间","children":[],"parent":"5ccda778d04a"}],"parent":"b78c6cc9571f"},{"id":"bff1701c6792","title":"网络延迟","children":[{"id":"631517609d54","title":"处理延迟：检查源地址、确定合适路由以及使用路由器其他功能占用的时间","children":[],"parent":"bff1701c6792"},{"id":"27cbaaac63fd","title":"传输延迟：向物理介质写比特流所花费的时间。链路层协议决定传输延迟","children":[],"parent":"bff1701c6792"},{"id":"fee42b9d0bdf","title":"排队延迟：在队列中消耗的时间","children":[],"parent":"bff1701c6792"},{"id":"29ab4195555a","title":"传播延迟：在传播过程中花费的延迟。路由协议决定传播延迟","children":[],"parent":"bff1701c6792"}],"parent":"b78c6cc9571f"}],"parent":"3d87cc99a12d"},{"id":"3f515ed268af","title":"抖动：任意两个客户端RTT发生变化，导致RTT与期望值有偏差","children":[{"id":"a68ce68bcd0f","title":"延迟导致抖动","children":[{"id":"64111808a312","title":"处理延迟：路由器动态吊证数据包路线使该延迟发生变化。影响最小","children":[],"parent":"a68ce68bcd0f"},{"id":"9117b0cf7aa3","title":"传输延迟和传播延迟：路由器动态进行负载均衡和改变路由避免拥堵时延迟会改变","children":[],"parent":"a68ce68bcd0f"},{"id":"c7611dcf772c","title":"排队延迟：到达路由器的数据包数量变化","children":[],"parent":"a68ce68bcd0f"}],"parent":"3f515ed268af"},{"id":"fc6a2fb275af","title":"减少抖动","children":[{"id":"4dc8becfe44f","title":"发送尽可能少的数据包","children":[],"parent":"fc6a2fb275af"},{"id":"d84ff896dfa5","title":"服务器部署在玩家附近","children":[],"parent":"fc6a2fb275af"},{"id":"d4b88b55e422","title":"将复杂操作合理分布在多个帧","children":[],"parent":"fc6a2fb275af"}],"parent":"3f515ed268af"}],"parent":"3d87cc99a12d"},{"id":"a3c3482102cb","title":"数据包丢失","children":[{"id":"2d5ad573404e","title":"原因","children":[{"id":"fb70d89b21e1","title":"不可靠的物理介质","children":[],"parent":"2d5ad573404e"},{"id":"ebec82a04014","title":"不可靠的链路层","children":[],"parent":"2d5ad573404e"},{"id":"c330c446e39b","title":"不可靠的网络层","children":[],"parent":"2d5ad573404e"}],"parent":"a3c3482102cb"}],"parent":"3d87cc99a12d"},{"id":"2a51948447f6","title":"选择协议","children":[{"id":"dc160d0e83a4","title":"TCP","children":[{"id":"7cfc04767168","title":"优点：提供了一个经得起时间考验的可靠性实现","children":[],"parent":"dc160d0e83a4"},{"id":"b2962c8667a2","title":"缺点","children":[{"id":"da5bd17d0941","title":"低优先级数据丢失干扰高优先级数据的接收","children":[],"parent":"b2962c8667a2"},{"id":"682f99b98e2e","title":"两个单独的可靠有序数据流相互干扰","children":[],"parent":"b2962c8667a2"},{"id":"282ea9e782f9","title":"过时的游戏状态重传","children":[],"parent":"b2962c8667a2"},{"id":"c0b208f37d18","title":"TCP为管理连接和跟踪状态分配了很多资源","children":[],"parent":"b2962c8667a2"}],"parent":"dc160d0e83a4"}],"parent":"2a51948447f6"},{"id":"6e1dc0315d50","title":"UDP","children":[{"id":"2a32e7e34319","title":"提供了一个空白画布，可根据游戏的需要绘制任何类型的自定义可靠系统。但增加了开发和测试时间","children":[],"parent":"6e1dc0315d50"}],"parent":"2a51948447f6"}],"parent":"3d87cc99a12d"}],"parent":"root"},{"id":"65507d3c49b5","title":"可扩展性","lineStyle":{"randomLineColor":"#3D5EC2"},"children":[{"id":"c1295ffe1ed8","title":"对象范围及相关性：因通知在范围内关于该对象的更新信息","children":[{"id":"b0ec7a2300ab","title":"静态区域：划分为一系列静态区域，只有在该区域内的才是相关的","children":[],"parent":"c1295ffe1ed8"},{"id":"9e6224095c04","title":"视锥：只有在玩家看的见的地方是相关的","children":[],"parent":"c1295ffe1ed8"},{"id":"71e97e14de4e","title":"潜在可见集：在世界的每个位置，哪些区域是潜在可见的，通常比单独静态区域小得多。潜在可见区域可能包含相关对象","children":[],"parent":"c1295ffe1ed8"}],"parent":"65507d3c49b5"},{"id":"ee5c95b1fa96","title":"服务器分区：运行多个服务器进程","children":[],"parent":"65507d3c49b5"},{"id":"59f517cfc0da","title":"实例化：一个共享的游戏同时支持多个不同副本，适用于所有角色在同一台服务器上共享世界游戏，但角色同一时刻可能不在同一副本","children":[],"parent":"65507d3c49b5"}],"parent":"root"}],"note":""}},"meta":{"id":"60ddbddef346fb04d2d3f584","member":"5ecd2453f346fb69071b5eaa","exportTime":"2021-07-05 17:22:28","diagramInfo":{"category":"mind_free","title":"图形学","created":"2021-07-01 21:06:38","creator":"5ecd2453f346fb69071b5eaa","modified":"2021-07-05 15:45:37"},"type":"ProcessOn Schema File","version":"1.0"}}